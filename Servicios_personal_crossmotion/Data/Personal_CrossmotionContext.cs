// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Servicios_personal_crossmotion.Models;

namespace Servicios_personal_crossmotion.Data
{
    public partial class Personal_CrossmotionContext : DbContext
    {
        public Personal_CrossmotionContext()
        {
        }

        public Personal_CrossmotionContext(DbContextOptions<Personal_CrossmotionContext> options)
            : base(options)
        {
        }

        public virtual DbSet<CatDepartamento> CatDepartamento { get; set; }
        public virtual DbSet<ObtenerPersonal> ObtenerPersonal { get; set; }
        public virtual DbSet<Personal> Personal { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<CatDepartamento>(entity =>
            {
                entity.HasKey(e => e.IdDepartamento)
                    .HasName("PK__cat_depa__64F37A16913756C0");

                entity.ToTable("cat_departamento");

                entity.Property(e => e.IdDepartamento).HasColumnName("id_departamento");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("departamento");
            });

            modelBuilder.Entity<ObtenerPersonal>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("obtenerPersonal");

                entity.Property(e => e.Apellido)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("apellido");

                entity.Property(e => e.Departamento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("departamento");

                entity.Property(e => e.Edad).HasColumnName("edad");

                entity.Property(e => e.FechaNacimiento)
                    .HasColumnType("date")
                    .HasColumnName("fecha_nacimiento");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_registro");

                entity.Property(e => e.IdPersonal).HasColumnName("id_personal");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("nombre");
            });

            modelBuilder.Entity<Personal>(entity =>
            {
                entity.HasKey(e => e.IdPersonal)
                    .HasName("PK__personal__418FB808ACD75DE2");

                entity.ToTable("personal");

                entity.Property(e => e.IdPersonal).HasColumnName("id_personal");

                entity.Property(e => e.Apellido)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("apellido");

                entity.Property(e => e.Edad).HasColumnName("edad");

                entity.Property(e => e.Estatus)
                    .HasColumnName("estatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.FechaNacimiento)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_nacimiento");

                entity.Property(e => e.FechaRegistro)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_registro")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FkDepartamento).HasColumnName("fk_departamento");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("nombre");

                /*
                entity.HasOne(d => d.FkDepartamentoNavigation)
                    .WithMany(p => p.Personal)
                    .HasForeignKey(d => d.FkDepartamento)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__personal__fk_dep__276EDEB3");
                **/
            });

            OnModelCreatingGeneratedProcedures(modelBuilder);
            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}